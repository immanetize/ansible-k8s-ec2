---
- include: os_tune.yml
- include: repo_setup.yml
- include: crio.yml
- set_fact:
    install_set: "{{ install_set | default([]) + ['%s%s' % (item, '-%s' % kube_release if 'kube' in item else '')] }}"
  with_items: "{{ role_packages }}"
- debug: var=install_set
- name: install packages
  become: true
  dnf:
    name: "{{ install_set }}"
    state: present
    allow_downgrade: yes
- name: enable dnf versionlock
  lineinfile:
    line: "{{item}}-{{ '.'.join(kube_release.split('.')[:2]) }}*"
    path: /etc/dnf/plugins/versionlock.list
  with_items: "{{ role_packages }}"
  when: '"kube" in item'
- name: install python modules for which there are not RPMs
  pip:
    name: "{{ pip_extra_modules }}"
    state: present
    extra_args: "--user"
  when: ( pip_extra_modules is defined )
- name: install etcd3 python module
  become: true
  pip:
    name: etcd3
    state: present
    extra_args: "--user"
 
- name: create docker service dropin dir
  become: true
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
- name: turn up services
  become: true
  service:
    name: "{{ item }}"
    enabled: yes
  with_items: 
    - kubelet
    - crio
- name: create a dir
  become: true
  file:
    path: /etc/kubernetes/pki/etcd
    state: directory
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/
- name: copy helper script
  become: true
  copy:
    src: cluster_bootstrap.py
    dest: /usr/local/bin/
    mode: 0755


