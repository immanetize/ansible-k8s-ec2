---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
{% if join_token  %}
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
{% endif %}
localAPIEndpoint:
  advertiseAddress: {{ private_ip }}
  bindPort: 6443
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: {{ hostname }}
  {% if role == "master" -%}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  {% else -%}
  taints: []
  {% endif -%}
  kubeletExtraArgs:
    cgroup-driver: "systemd"
    cloud-provider: aws
    provider-id: {{ provider_id }}
    node-ip: {{ private_ip }}
    node-labels: KubernetesCluster={{ cluster_name }}
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
clusterName: {{ cluster_name }}
kubernetesVersion: stable
controlPlaneEndpoint: "{{ kube_vip }}:6443"
certificatesDir: /etc/kubernetes/pki
etcd:
    external:
        endpoints:
        {% for url in etcd_server_urls -%}
        - {{ url }}
        {% endfor -%}
        caFile: /etc/kubernetes/pki/etcd/ca.crt
        certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
        keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
networking:
  podSubnet: 192.168.0.0/16
  dnsDomain: "{{ cluster_name }}.local"
  serviceSubnet: 10.96.0.0/12
apiServer:
  extraArgs:
    cloud-provider: aws
    advertise-address: {{ private_ip }}
    audit-log-path: "-"
  timeoutForControlPlane: 10m0s
  certSANs:
    - "{{ private_ip }}"
    - "{{ hostname }}"
    - "{{ kube_vip }}"
controllerManager:
  extraArgs:
    cloud-provider: aws
    cluster-name: {{ cluster_name }}
dns:
  type: CoreDNS
scheduler: {}
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: JoinConfiguration
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: {{ hostname }}
  {% if role == "master" -%}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  {% else -%}
  taints: []
  {% endif -%}
  kubeletExtraArgs:
    cgroup-driver: "systemd"
    cloud-provider: aws
    provider-id: {{ provider_id }}
    node-ip: {{ private_ip }}
    node-labels: KubernetesCluster={{ cluster_name }}{%- if role == 'worker' -%},k8s.io/cluster-autoscaler/{{ cluster_name }}{%- endif -%}
