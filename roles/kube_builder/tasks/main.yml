# elb at {{ kube_vip }}
- name: ensure cert dir exists
  become: true
  file:
    path: /etc/kubernetes/pki/etcd
    state: directory
    recurse: yes
- name: ship certs
  become: true
  copy:
    src: "{{ playbook_dir }}/local_cache/{{ item }}"
    dest: "/etc/kubernetes/pki/{{ '/etcd/' if item == 'ca.crt' else '' }}/{{ item }}"
  with_items: 
    - ca.crt
    - apiserver-etcd-client.crt
    - apiserver-etcd-client.key
- name: ship kubeadm-config.yaml
  template:
    src: kubeadm-config.yaml.j2
    dest: "/home/{{ansible_user}}/kubeadm-config.yaml"
- fail:
  failed_when: reset_ca is defined
- name: do init stuff
  run_once: true
  include_tasks: kubeadm_init.yml
- debug: var=cp_certs
- name: ship cacerts
  become: true
  copy:
    content: "{{ item.content | b64decode }}"
    dest: "{{ item.item }}"
  with_items: "{{ cp_certs }}"
  when: ( cp_certs is defined )
- name: join the cluster
  become: true
  shell: "{{ join_command }} creates=/var/lib/kubelet/config.yaml {{ '--control-plane' if control_plane_node is defined else '' }}"
  register: join_results
  when: not ( master_host is defined ) 
- debug: var=join_results
- name: create configdir
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
- name: copy kubeconfig
  become: true
  copy:
    remote_src: true
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
- name: slurp kubeconfig
  become: true
  slurp:
    src: /etc/kubernetes/admin.conf
  register: kubectl_config_raw
- debug: var=kubectl_config_raw
- name: get kubeconfig
  run_once: true
  delegate_to: localhost
  copy:
    content: "{{ kubectl_config_raw.content | b64decode }}"
    dest: "{{ playbook_dir }}/local_cache/kubectl.conf"
- include_tasks: apply_cni.yml
  run_once: true
- k8s:
    apply: yes
    resource_definitions: "{{ lookup('template', 'configmap_coredns.yaml') }}"
    kubeconfig: "{{ playbook_dir }}/local_cache/kubectl.conf"
