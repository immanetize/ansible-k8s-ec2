- name: find image
  delegate_to: localhost
  ec2_ami_info:
    profile: "{{ aws_profile }}"
    owner: "self"
    region: "{{ region }}"
    filters:
      name: "{{ cluster_name }}-universal"
      tag:randomuser.org/hamburger: "true"
  register: discovered_image
- debug: var=discovered_image
- set_fact:
    replace_image: "{{ discovered_image.images[0].image_id | default(None) }}"
    replace_image_version: "{{ discovered_image.images[0].tags['randomuser.org/version'] |default(omit) }}"
  when: discovered_image.images is defined
- block:
  - name: deregister old image
    delegate_to: localhost
    ec2_ami:
      profile: "{{ aws_profile }}"
      region: "{{ region }}"
      image_id: "{{ replace_image | default(omit) }}"
      state: absent
      wait: yes
    when: ( discovered_image | length < 0 )
  - name: capture image
    delegate_to: localhost
    ec2_ami:
      profile: "{{ aws_profile }}"
      region: "{{ region }}"
      description: "universal base image"
      instance_id: "{{ instance_id }}"
      name: "{{ cluster_name }}-universal"
      tags:
        randomuser.org/hamburger: "true"
        randomuser.org/version: "{{ universal_image_version }}"
      wait: yes
    register: ec2_image
  when: (replace_image_version | default('None') != universal_image_version)
   

